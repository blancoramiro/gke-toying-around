{{- range .Values.deployments_name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "telemetry-demoapp.fullname" $ }}-{{ . }}
  labels:
    {{- include "telemetry-demoapp.labels" $ | nindent 4 }}
spec:
  {{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $.Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "telemetry-demoapp.name" $ }}-{{ . }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "telemetry-demoapp.name" $ }}-{{ . }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "telemetry-demoapp.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $.Chart.Name }}
          env:
            - name: DEMOAPP_OTLP_ENDPOINT
              value: "{{ $.Values.otlp_endpoint }}"
            - name: DEMOAPP_MAX_HOPS
              value: "{{ $.Values.max_hops }}"
            - name: DEMOAPP_MIN_HOPS
              value: "{{ $.Values.min_hops }}"
            - name: DEMOAPP_SERVICENAME
              value: "{{ include "telemetry-demoapp.name" $ }}-{{ . }}"
            - name: DEMOAPP_DESTINATION_SVCS
              value: "{{- $local := dict "first" true "current" . -}}{{- range $.Values.deployments_name }}{{- if ne . $local.current -}}{{- if not $local.first -}},{{- end -}}{{- $_ := set $local "first" false -}}{{ include "telemetry-demoapp.name" $ }}-{{ . }}{{- end -}}{{- end }}"
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
